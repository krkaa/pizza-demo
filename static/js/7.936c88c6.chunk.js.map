{"version":3,"sources":["Components/Cart/Cart.module.sass","Components/Cart/CartCheckoutItem/CartCheckoutItem.module.sass","Components/Cart/CartCheckoutItem/CartCheckoutItem.js","Components/Cart/CartOrderForm/index.js","Components/Cart/Cart.js"],"names":["module","exports","connect","clearItem","addItem","removeItem","cartItem","name","imageUrl","price","quantity","className","s","imgStyle","style","backgroundImage","alt","arrow","onClick","value","removeButton","reduxForm","form","handleSubmit","cart","totalPrice","console","log","bordered","title","size","cartItems","map","item","Item","label","ContactsReduxForm","onSubmit","placeholder","required","type","defaultValue","button","marginBottom","state","userAddress","menu","userAdress","setUserAddress","reduce","total","amount","useState","visible","setVisible","data-field","key","id","orderWrapper","formData","placement","closable","onClose","height"],"mappings":"mFACAA,EAAOC,QAAU,CAAC,aAAe,2BAA2B,MAAQ,oBAAoB,OAAS,uB,oBCAjGD,EAAOC,QAAU,CAAC,SAAW,mCAAmC,SAAW,mCAAmC,MAAQ,gCAAgC,MAAQ,gCAAgC,aAAe,yC,yHCwC9LC,cAAQ,KAAM,CAACC,cAAWC,YAASC,gBAAnCH,EAnCU,SAAC,GAAgD,IAA/CI,EAA8C,EAA9CA,SAAUH,EAAoC,EAApCA,UAAWC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,WAC9CE,EAAmCD,EAAnCC,KAAMC,EAA6BF,EAA7BE,SAAUC,EAAmBH,EAAnBG,MAAOC,EAAYJ,EAAZI,SAE9B,OAAO,oCACH,4BACI,4BACI,yBAAKC,UAAWC,IAAEC,SAAUC,MAAO,CAACC,gBAAgB,OAAD,OAASP,EAAT,MAAuBQ,IAAI,UAElF,4BACI,0BAAML,UAAWC,IAAEL,MAAOA,IAE9B,4BACI,0BAAMI,UAAWC,IAAEF,UACP,yBAAKC,UAAWC,IAAEK,MAAOC,QAAS,kBAAMb,EAAWC,EAXnE,KAWgB,UAGQ,0BAAMK,UAAWC,IAAEO,OAAQT,GACnC,yBAAKC,UAAWC,IAAEK,MAAOC,QAAS,kBAAMd,EAAQE,EAfhE,KAegB,YAKhB,4BACI,0BAAMK,UAAWC,IAAEH,OAAnB,IAA4BA,IAEhC,4BACI,yBAAKE,UAAWC,IAAEQ,aAAcF,QAAS,kBAAMf,EAAUG,EAAUI,KAAnE,gB,kBCMDW,cAAU,CAACC,KAAM,SAAjBD,EAjCO,SAAC,GAAqC,EAApCE,aAAqC,IAAvBC,EAAsB,EAAtBA,KAAsB,EAAhBC,WAExC,OADAC,QAAQC,IAAIH,GACL,oCACH,kBAAC,IAAD,CAAcI,UAAQ,EAACC,MAAM,WAAWC,KAAK,SAEzCN,EAAKO,UAAUC,KAAI,SAAAC,GACnB,OAAO,oCACH,kBAAC,IAAaC,KAAd,CAAmBC,MAAM,WAAWF,EAAK1B,MACzC,kBAAC,IAAa2B,KAAd,CAAmBC,MAAM,UAAzB,WAAuCF,EAAKxB,QAC5C,kBAAC,IAAayB,KAAd,CAAmBC,MAAM,eAAzB,QAEI,6BAFJ,QAII,6BAJJ,SAKU,mCAMlB,6BACA,6BACA,kBAAC,IAAD,CAAcN,MAAM,cAAcC,KAAK,UACnC,kBAAC,IAAaI,KAAd,CAAmBC,MAAM,WAAzB,kBACA,kBAAC,IAAaD,KAAd,CAAmBC,MAAM,WAAzB,WACA,kBAAC,IAAaD,KAAd,CAAmBC,MAAM,QAAzB,YACA,kBAAC,IAAaD,KAAd,CAAmBC,MAAM,UAAzB,UACA,kBAAC,IAAaD,KAAd,CAAmBC,MAAM,YAAzB,UACA,kBAAC,IAAaD,KAAd,CAAmBC,MAAM,YAAzB,e,kCCoDRC,EAAoBf,YAAU,CAACC,KAAM,iBAAjBD,EAAmC,YAAqB,IAAnBE,EAAkB,EAAlBA,aACzD,OACI,0BAAMc,SAAUd,GACZ,qFACA,kBAAC,IAAD,CACIe,YAAa,mBACb/B,KAAK,UACLgC,UAAU,EACVC,KAAK,OACLC,aAAc,KAClB,iGACA,kBAAC,IAAD,CACIH,YAAa,yBACb/B,KAAK,QACLgC,UAAU,EACVC,KAAM,QACV,kBAAC,SAAD,CAAQ7B,UAAS,iBAAYC,IAAE8B,QAAU5B,MAAO,CAAC6B,aAAc,SAA/D,aAKGzC,uBA1BS,SAAC0C,GAAD,MAAY,CAChCpB,KAAMoB,EAAMpB,KACZqB,YAAaD,EAAME,KAAKC,cAwBY,CAACC,oBAA1B9C,EA/FF,SAAC,GAAyC,IAAxCsB,EAAuC,EAAvCA,KACLC,GAD4C,EAAjCoB,YAAiC,EAApBG,eACXxB,EAAKO,UAAUkB,QAAO,SAACC,EAAOC,GAC7C,OAAOA,EAAO1C,MAAQ0C,EAAOzC,SAAWwC,IACzC,IAH+C,EAapBE,oBAAS,GAbW,mBAa3CC,EAb2C,KAalCC,EAbkC,KAuBlD,OACI,6BACA,kBAAC,QAAD,KACI,+BACA,4BACI,wBAAIC,aAAW,WAAf,WAGA,wBAAIA,aAAW,eAAf,eAGA,wBAAIA,aAAW,YAAf,YAGA,wBAAIA,aAAW,SAAf,SAGA,wBAAIA,aAAW,UAAf,YAKJ,+BAEI/B,EAAKO,UAAUC,KAAI,SAAA1B,GAAQ,OAAI,kBAAC,EAAD,CAAkBkD,IAAKlD,EAASmD,GAAInD,SAAUA,SAIrF,yBAAKK,UAAWC,IAAE8C,cACd,yBAAK/C,UAAWC,IAAEsC,OAAlB,UACYzB,EADZ,MAIJ,kBAACW,EAAD,CAAmBC,SAnDN,SAACsB,GAEdjC,QAAQC,IAAIgC,MAkDZ,kBAAC,IAAD,CACIC,UAAU,MACVC,UAAU,EACVC,QAzCM,WACVR,GAAW,IAyCPD,QAASA,EACTU,OAAQ,KAER,kBAAC,EAAD,CAAevC,KAAMA,EAAMC,WAAYA","file":"static/js/7.936c88c6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"orderWrapper\":\"Cart_orderWrapper__1uqFP\",\"total\":\"Cart_total__2Fy4B\",\"button\":\"Cart_button__1C_7I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgStyle\":\"CartCheckoutItem_imgStyle__1XsWv\",\"quantity\":\"CartCheckoutItem_quantity__ppNeb\",\"arrow\":\"CartCheckoutItem_arrow__1DTv3\",\"value\":\"CartCheckoutItem_value__3cEM1\",\"removeButton\":\"CartCheckoutItem_removeButton__1fRWY\"};","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {clearItem, removeItem, addItem} from '../../../redux/cart-reducer'\r\nimport s from './CartCheckoutItem.module.sass'\r\n\r\n\r\nconst CartCheckoutItem = ({cartItem, clearItem, addItem, removeItem}) => {\r\n    const {name, imageUrl, price, quantity} = cartItem;\r\n    let q = 1\r\n    return <>\r\n        <tr>\r\n            <td>\r\n                <div className={s.imgStyle} style={{backgroundImage: `url(${imageUrl})`}} alt='item'/>\r\n            </td>\r\n            <td>\r\n                <span className={s.name}>{name}</span>\r\n            </td>\r\n            <td>\r\n                <span className={s.quantity}>\r\n                            <div className={s.arrow} onClick={() => removeItem(cartItem, q)}>\r\n                                &#10094;\r\n                            </div>\r\n                                    <span className={s.value}>{quantity}</span>\r\n                            <div className={s.arrow} onClick={() => addItem(cartItem, q)}>\r\n                                        &#10095;\r\n                            </div>\r\n                </span>\r\n            </td>\r\n            <td>\r\n                <span className={s.price}>${price}</span>\r\n            </td>\r\n            <td>\r\n                <div className={s.removeButton} onClick={() => clearItem(cartItem, quantity)}>\r\n                    &#10005;\r\n                </div>\r\n            </td>\r\n        </tr>\r\n    </>\r\n};\r\n\r\n\r\nexport default connect(null, {clearItem, addItem, removeItem})(CartCheckoutItem)","import React from 'react'\r\nimport {reduxForm} from \"redux-form\";\r\nimport s from '../Cart.module.sass'\r\nimport {Descriptions} from \"antd\";\r\n\r\nconst CartOrderForm = ({handleSubmit, cart, totalPrice}) => {\r\n    console.log(cart)\r\n    return <>\r\n        <Descriptions bordered title=\"Products\" size=\"small\">\r\n        {\r\n            cart.cartItems.map(item => {\r\n            return <>\r\n                <Descriptions.Item label=\"Product\">{item.name}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Amount\">{`$${item.price}`}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Config Info\">\r\n                    meat,\r\n                    <br/>\r\n                    salt,\r\n                    <br/>\r\n                    cheese<br/>\r\n                </Descriptions.Item>\r\n           </>\r\n        })\r\n        }\r\n        </Descriptions>\r\n        <br/>\r\n        <br/>\r\n        <Descriptions title=\"Custom Size\" size=\"middle\">\r\n            <Descriptions.Item label=\"Product\">Cloud Database</Descriptions.Item>\r\n            <Descriptions.Item label=\"Billing\">Prepaid</Descriptions.Item>\r\n            <Descriptions.Item label=\"time\">18:00:00</Descriptions.Item>\r\n            <Descriptions.Item label=\"Amount\">$80.00</Descriptions.Item>\r\n            <Descriptions.Item label=\"Discount\">$20.00</Descriptions.Item>\r\n            <Descriptions.Item label=\"Official\">$60.00</Descriptions.Item>\r\n        </Descriptions>\r\n    </>\r\n}\r\n\r\nexport default reduxForm({form: 'order'})(CartOrderForm)","import React, {useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport s from './Cart.module.sass'\r\nimport CartCheckoutItem from './CartCheckoutItem/CartCheckoutItem'\r\nimport CartOrderForm from \"./CartOrderForm\";\r\nimport {Button, Table} from \"react-materialize\";\r\nimport {Drawer, Input} from 'antd'\r\nimport {reduxForm} from \"redux-form\";\r\nimport {setUserAddress} from \"../../redux/menu-reducer\";\r\n\r\n\r\nconst Cart = ({cart, userAddress, setUserAddress}) => {\r\n    const totalPrice = cart.cartItems.reduce((total, amount) => {\r\n        return amount.price * amount.quantity + total\r\n    }, 0)\r\n\r\n    const onSubmit = (formData) => {\r\n        //await setUserAdress(formData.userAdr)\r\n        console.log(formData)\r\n        /*if (formData.phone && formData.userAdr && cart.cartItems.length) {\r\n            showDrawer()\r\n        }*/\r\n    }\r\n\r\n    const [visible, setVisible] = useState(false)\r\n\r\n    let showDrawer = () => {\r\n        setVisible(true)\r\n    };\r\n\r\n    let onClose = () => {\r\n        setVisible(false)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n        <Table>\r\n            <thead>\r\n            <tr>\r\n                <th data-field=\"Product\">\r\n                    Product\r\n                </th>\r\n                <th data-field=\"Description\">\r\n                    Description\r\n                </th>\r\n                <th data-field=\"Quantity\">\r\n                    Quantity\r\n                </th>\r\n                <th data-field=\"Price\">\r\n                    Price\r\n                </th>\r\n                <th data-field=\"Remove\">\r\n                    Remove\r\n                </th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {\r\n                cart.cartItems.map(cartItem => <CartCheckoutItem key={cartItem.id} cartItem={cartItem}/>)\r\n            }\r\n            </tbody>\r\n        </Table>\r\n        <div className={s.orderWrapper}>\r\n            <div className={s.total}>\r\n                Total: {totalPrice}$\r\n            </div>\r\n        </div>\r\n        <ContactsReduxForm onSubmit={onSubmit}/>\r\n        <Drawer\r\n            placement=\"top\"\r\n            closable={false}\r\n            onClose={onClose}\r\n            visible={visible}\r\n            height={400}\r\n        >\r\n            <CartOrderForm cart={cart} totalPrice={totalPrice}/>\r\n        </Drawer>\r\n    </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    cart: state.cart,\r\n    userAddress: state.menu.userAdress\r\n})\r\n\r\nlet ContactsReduxForm = reduxForm({form: 'contactsOrder'})(({handleSubmit}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <span>Ваш адрес: </span>\r\n            <Input\r\n                placeholder={'Type your adress'}\r\n                name=\"userAdr\"\r\n                required={true}\r\n                type='text'\r\n                defaultValue={''}/>\r\n            <span>Ваш телефон: </span>\r\n            <Input\r\n                placeholder={'Type your phone number'}\r\n                name=\"phone\"\r\n                required={true}\r\n                type={'tel'}/>\r\n            <Button className={`orange ${s.button}`} style={{marginBottom: '20px'}}>Order</Button>\r\n        </form>\r\n    )\r\n})\r\n\r\nexport default connect(mapStateToProps, {setUserAddress})(Cart)"],"sourceRoot":""}