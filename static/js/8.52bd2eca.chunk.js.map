{"version":3,"sources":["Components/Menu/Collection/CollectionPreview.module.sass","Components/Menu/MenuContent.module.sass","Components/Menu/MenuHead.jsx","Components/Menu/Collection/CollectionPreview.js","Components/Menu/MenuContent.jsx"],"names":["module","exports","MenuHead","displayName","currentUser","Meta","Card","compose","withWindowSizeListener","connect","addItem","item","windowSize","name","price","imageUrl","windowWidth","windowHeight","useState","spanRow","setSpanRow","cardWidth","setCardWidth","imgHeight","setImgHeight","useEffect","className","span","style","margin","s","card","width","cover","height","alt","src","actions","node","marginRight","backgroundColor","waves","onClick","message","success","key","id","title","description","Content","Layout","Sider","state","menuData","menu","quantityItems","cart","useContext","AuthContext","setDisplayName","contentId","setContentId","padding","sider","defaultSelectedKeys","defaultOpenKeys","mode","theme","map","Item","PieChartOutlined","gutter","xs","sm","md","lg","items","CollectionPreview"],"mappings":"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","file":"static/js/8.52bd2eca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"CollectionPreview_card__3ynnc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sider\":\"MenuContent_sider__2OyrV\"};","import React from 'react';\r\n\r\nconst MenuHead = ({displayName, currentUser}) => {\r\n\r\n    return <>\r\n        {\r\n            currentUser\r\n                ? <p>{`Вы авторизованы как`} <b>{displayName}</b></p>\r\n                : <p><b>{`Здарвствуйте, ${displayName}!`}</b></p>\r\n        }\r\n    </>\r\n}\r\n\r\nexport default MenuHead","import React, {useEffect, useState} from 'react'\r\nimport s from './CollectionPreview.module.sass'\r\nimport {addItem} from '../../../redux/cart-reducer'\r\nimport {connect} from 'react-redux'\r\nimport {Button} from \"react-materialize\";\r\nimport {Card, Col} from \"antd\";\r\nimport { message } from 'antd';\r\nimport {compose} from \"redux\";\r\nimport {withWindowSizeListener} from \"react-window-size-listener\";\r\n\r\nconst { Meta } = Card\r\n\r\nconst CollectionItem = ({item, addItem, windowSize}) => {\r\n    const {name, price, imageUrl} = item\r\n    const {windowWidth, windowHeight} = windowSize\r\n\r\n    const [spanRow, setSpanRow] = useState(8)\r\n    const [cardWidth, setCardWidth] = useState(200)\r\n    const [imgHeight, setImgHeight] = useState(200)\r\n\r\n    const onClickEvent = () => {\r\n        let q = 1\r\n        addItem(item, q)\r\n        message.success('Product add to cart!');\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (windowWidth < 600) {\r\n            setSpanRow(24)\r\n            setCardWidth(155)\r\n            setImgHeight(155)\r\n        }\r\n        else if (windowWidth > 600 && windowWidth < 768) {\r\n            setSpanRow(12)\r\n            setCardWidth(155)\r\n            setImgHeight(155)\r\n        }\r\n        else if (windowWidth > 768 && windowWidth < 992) {\r\n            setSpanRow(8)\r\n            setCardWidth(155)\r\n            setImgHeight(155)\r\n        }\r\n        else if (windowWidth > 992 && windowWidth < 1200) {\r\n            setSpanRow(8)\r\n            setCardWidth(200)\r\n            setImgHeight(200)\r\n        }\r\n        else if (windowWidth > 1200 && windowWidth < 1449) {\r\n            setSpanRow(6)\r\n            setCardWidth(200)\r\n            setImgHeight(200)\r\n        }\r\n        else if (windowWidth > 1449 && windowWidth < 1920) {\r\n            setSpanRow(6)\r\n            setCardWidth(260)\r\n            setImgHeight(260)\r\n        }\r\n        else if (windowWidth > 1920) {\r\n            setSpanRow(6)\r\n            setCardWidth(350)\r\n            setImgHeight(350)\r\n        }\r\n    }, [windowWidth])\r\n\r\n    return (\r\n\r\n        <Col className=\"gutter-row\" span={spanRow} style={{margin: 'auto 0'}}>\r\n            <Card\r\n                className={s.card}\r\n                style={{ width: cardWidth }}\r\n                cover={\r\n                    <img\r\n                        style={{height: `${imgHeight}px`}}\r\n                        alt={name}\r\n                        src={imageUrl}\r\n                    />\r\n                }\r\n                actions={[\r\n                    <Button\r\n                        node=\"button\"\r\n                        style={{\r\n                            marginRight: '5px',\r\n                            backgroundColor: '#FF9800'\r\n                        }}\r\n                        waves=\"light\"\r\n                        onClick={onClickEvent}\r\n                        key={item.id}\r\n                    >\r\n                        Add to cart\r\n                    </Button>\r\n                ]}\r\n            >\r\n                <Meta\r\n                    title={name}\r\n                    description={`${price}$`}\r\n                />\r\n            </Card>\r\n        </Col>\r\n    )\r\n}\r\n\r\n\r\nexport default compose(\r\n    withWindowSizeListener,\r\n    connect(null, {addItem})\r\n)(CollectionItem)","import React, {useContext, useEffect, useState} from 'react';\r\nimport {AuthContext} from \"../Auth/Auth\";\r\nimport {connect} from \"react-redux\";\r\nimport MenuHead from \"./MenuHead\";\r\nimport {Layout, Menu, Row} from \"antd\";\r\nimport {PieChartOutlined} from '@ant-design/icons'\r\nimport CollectionPreview from \"./Collection/CollectionPreview\";\r\nimport s from \"./MenuContent.module.sass\"\r\n\r\nconst {Content, Sider} = Layout;\r\n\r\nconst MenuContent = ({menuData, quantityItems}) => {\r\n\r\n    const {currentUser} = useContext(AuthContext)\r\n\r\n    const [displayName, setDisplayName] = useState('Гость')\r\n    const [contentId, setContentId] = useState(menuData[0].id)\r\n\r\n    useEffect(() => {\r\n        if (currentUser != null) {\r\n            setDisplayName(currentUser.displayName)\r\n        } else {\r\n            setDisplayName('Гость')\r\n        }\r\n    }, [currentUser])\r\n\r\n\r\n    return <>\r\n        <MenuHead displayName={displayName} currentUser={currentUser} quantityItems={quantityItems}/>\r\n        <Layout className=\"site-layout-background\" style={{padding: '24px 0', backgroundColor: '#fff'}}>\r\n            <Sider className={`site-layout-background ${s.sider}`} width={150}>\r\n                <Menu\r\n                    defaultSelectedKeys={['1']}\r\n                    defaultOpenKeys={['sub1']}\r\n                    mode=\"inline\"\r\n                    theme=\"light\"\r\n                >\r\n                    {\r\n                        menuData.map(item => (\r\n                            <Menu.Item key={item.id} onClick={() => setContentId(item.id)}>\r\n                                <PieChartOutlined style={{marginRight: 10}}/>\r\n                                <span>{item.title}</span>\r\n                            </Menu.Item>\r\n                        ))\r\n                    }\r\n                </Menu>\r\n            </Sider>\r\n            <Content style={{padding: '0 24px'}}>\r\n                <Row gutter={{xs: 8, sm: 16, md: 24, lg: 32}}>\r\n                        {\r\n                            menuData.map(item => {\r\n                                if (item.id === contentId) {\r\n                                    return item.items\r\n                                        .map((item) => (\r\n                                            <CollectionPreview\r\n                                                key={item.id}\r\n                                                name={item.name}\r\n                                                imageUrl={item.imageUrl}\r\n                                                price={item.price}\r\n                                                item={item}\r\n                                            />\r\n                                        ))\r\n                                }\r\n                                return undefined\r\n                            })\r\n                        }\r\n                </Row>\r\n            </Content>\r\n        </Layout>\r\n    </>\r\n}\r\n\r\nlet mapStateToProps = state => ({\r\n    menuData: state.menu.menuData,\r\n    quantityItems: state.cart.quantityItems\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(MenuContent)"],"sourceRoot":""}