{"version":3,"sources":["assets/images/preloader.svg","assets/images/logo.png","assets/images/home-image.jpg","Controls/Validators/Validators.js","Components/Header/NavBar/NavBar.module.sass","Components/HomeContent/HomeContent.module.sass","common/Preloader/Preloader.js","Components/Header/NavBar/NavBar.jsx","Components/Header/Header.jsx","Components/HomeContent/HomeContent.jsx","redux/menu-reducer.js","Components/HomeContent/HomeContainer.js","App.js","serviceWorker.js","redux/redux-store.js","index.js","Components/Auth/Auth.js","Components/Firebase/Firebase.js","redux/auth-reducer.js","common/FormControls/FormControls.js","App.module.sass","Components/Header/Header.module.sass","common/FormControls/FormControls.module.sass"],"names":["module","exports","required","value","Preloader","props","src","preloader","NavBar","currentUser","useContext","AuthContext","className","s","nav","item","exact","to","activeClassName","active","onClick","app","auth","signOut","Header","styles","header","logo","style","background","backgroundImg","backgroundSize","borderRadius","reduxForm","form","handleSubmit","homePage","desciption","h1","span","orderArea","onSubmit","createField","Input","orderInput","button","type","INITIAL_STATE","userAdress","menuReducer","state","action","payload","connect","setUserAdress","adress","reset","history","formData","orderAdress","push","MenuContent","lazy","Login","compose","withRouter","Auth","appWrapper","appWrapperContent","path","component","HomeContainer","fallback","render","Boolean","window","location","hostname","match","reducers","combineReducers","authReducer","formReducer","menu","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","React","createContext","setCurrentUser","children","useState","useEffect","onAuthStateChanged","Provider","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","user","userReducer","Element","input","meta","touched","hasError","formControl","placeholder","name","validator","text","validate"],"mappings":"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","file":"static/js/main.f9b912b5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/preloader.b303b419.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.991d78ee.png\";","module.exports = __webpack_public_path__ + \"static/media/home-image.99420fc7.jpg\";","import React from \"react\";\r\n\r\nexport const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return <span>{\"Required!\"}</span>;\r\n};\r\n\r\n\r\nexport const maxLengthCreator = maxLength => value => {\r\n    if (value.length > maxLength) return <span>{`Max length is ${maxLength} symbols`}</span>;;\r\n\r\n    return undefined;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"NavBar_nav__24XRG\",\"item\":\"NavBar_item__2JtsK\",\"email\":\"NavBar_email__3ZqpZ\",\"active\":\"NavBar_active__9Haiz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"homePage\":\"HomeContent_homePage__3uiqq\",\"h1\":\"HomeContent_h1__2xqKm\",\"orderArea\":\"HomeContent_orderArea__2Obf9\",\"orderInput\":\"HomeContent_orderInput__1qcOp\"};","import React from 'react';\r\nimport preloader from \"../../assets/images/preloader.svg\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div>\r\n                <img src={preloader}/>\r\n            </div>\r\n};\r\n\r\nexport default Preloader;","import React, {useContext} from 'react';\r\nimport s from './NavBar.module.sass';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {AuthContext} from \"../../Auth/Auth\";\r\nimport app from \"../../Firebase/Firebase\";\r\n\r\nconst NavBar = () => {\r\n    const {currentUser} = useContext(AuthContext)\r\n    return (\r\n        <nav className={s.nav}>\r\n            <ul>\r\n                <li className={s.item}><NavLink exact to=\"/\" activeClassName={s.active}>Home</NavLink></li>\r\n                <li className={s.item}><NavLink to=\"/menu\" activeClassName={s.active}>Menu</NavLink></li>\r\n                {!currentUser\r\n                    ? <li className={s.item}><NavLink to=\"/login\" activeClassName={s.active}>Login</NavLink></li>\r\n                    : <button onClick={() => {\r\n                            app.auth().signOut()\r\n                        }}>Sign Out</button>\r\n                }\r\n            </ul>\r\n        </nav>\r\n\r\n    );\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport styles from './Header.module.sass'\r\nimport logo from '../../assets/images/logo.png'\r\nimport NavBar from \"./NavBar/NavBar\";\r\n\r\nconst Header = () => {\r\n    return <div>\r\n        <div className={styles.header}>\r\n            <div className={styles.logo}><img src={logo}/></div>\r\n            <NavBar/>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport styles from \"./HomeContent.module.sass\"\r\nimport backgroundImg from \"../../assets/images/home-image.jpg\";\r\nimport {createField, Input} from \"../../common/FormControls/FormControls\";\r\nimport {reduxForm, submit} from \"redux-form\";\r\nimport {required} from \"../../Controls/Validators/Validators\";\r\n\r\nconst style = {\r\n    background: `url(${backgroundImg}) 100% 100% no-repeat`,\r\n    backgroundSize: \"cover\",\r\n    borderRadius: \"5px\"\r\n}\r\n\r\n\r\nconst HomeContent = ({handleSubmit}) => {\r\n    return <div className={styles.homePage} style={style}>\r\n            <div className={styles.desciption}>\r\n                <h1 className={styles.h1}><span className={styles.span}>Pizza shop</span> - it's Very tasty</h1>\r\n            </div>\r\n            <div className={styles.orderArea}>\r\n                <form onSubmit={handleSubmit}>\r\n                    {createField('Type your adress...', 'text', 'orderAdress', Input, [], styles.orderInput)}\r\n                    <button className={styles.button} type=\"submit\">Order</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n}\r\n\r\nexport default reduxForm({form: 'order'})(HomeContent)","const SET_USER_ADRESS = 'menu-reducer/SET_USER_ADRESS'\r\n\r\nconst INITIAL_STATE = {\r\n    userAdress: null\r\n}\r\n\r\nconst menuReducer = ( state = INITIAL_STATE, action ) => {\r\n    switch (action.type) {\r\n\r\n        case SET_USER_ADRESS:\r\n            return {\r\n                ...state,\r\n                userAdress: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setUserAdress = (adress) => ({ type: SET_USER_ADRESS, payload: adress })\r\n\r\nexport default menuReducer","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport HomeContent from \"./HomeContent\";\r\nimport {setUserAdress} from \"../../redux/menu-reducer\";\r\nimport {reset} from 'redux-form'\r\nimport {Redirect} from \"react-router\";\r\n\r\nconst HomeContainer = ({setUserAdress, reset, history}) => {\r\n\r\n    const onSubmitAdress = (formData) => {\r\n        setUserAdress(formData.orderAdress)\r\n        reset('order')\r\n        history.push('/menu')\r\n    }\r\n\r\n    return (\r\n        <HomeContent onSubmit={onSubmitAdress}/>\r\n    )\r\n}\r\n\r\nexport default connect(null, {setUserAdress, reset})(HomeContainer)","import React, {lazy, Suspense} from 'react';\nimport styles from './App.module.sass';\nimport {Route, Switch, withRouter} from \"react-router-dom\";\nimport Preloader from \"./common/Preloader/Preloader\";\nimport Header from \"./Components/Header/Header\";\nimport AuthProvider from \"./Components/Auth/Auth\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport HomeContainer from \"./Components/HomeContent/HomeContainer\";\n\nconst MenuContent = lazy(() => import(\"./Components/Menu/MenuContent\"))\nconst Login = lazy(() => import(\"./Components/Login/Login\"))\n\nconst App = (props) => {\n\n    return (\n        <AuthProvider>\n            <Switch>\n                <div className={styles.appWrapper}>\n                    <Header />\n                    <div className={styles.appWrapperContent}>\n                        <Route\n                            exact path='/'\n                            component={HomeContainer}\n                        />\n                        <Suspense fallback={<Preloader/>}>\n\n                            <Route\n                                exact path='/menu'\n                                render={() => <MenuContent/>}\n                            />\n                            <Route\n                                exact path='/login'\n                                render={() => <Login/>}\n                            />\n\n                        </Suspense>\n                    </div>\n                </div>\n            </Switch>\n        </AuthProvider>\n    )\n}\n\nexport default compose(\n    withRouter,\n    connect(null, null)\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\"\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport authReducer from \"./auth-reducer\"\r\nimport menuReducer from \"./menu-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    menu: menuReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/redux-store\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, {useEffect, useState} from 'react'\r\nimport app from '../Firebase/Firebase'\r\nimport {setCurrentUser} from \"../../redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nexport const AuthContext = React.createContext()\r\n\r\nconst AuthProvider = ({children, ...props}) => {\r\n    const [currentUser, setCurrentUser] = useState(null)\r\n\r\n    useEffect(() => {\r\n        app.auth().onAuthStateChanged(setCurrentUser)\r\n    }, [])\r\n\r\n    if (currentUser) {\r\n        props.setCurrentUser(currentUser)\r\n    }\r\n    else {\r\n        props.setCurrentUser(null)\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider\r\n            value={{currentUser}}\r\n            >\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default connect(null, {setCurrentUser})(AuthProvider)","import * as firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n});\r\n\r\nexport default app;","const SET_CURRENT_USER = 'auth-reducer/SET_CURRENT_USER'\r\n\r\nconst INITIAL_STATE = {\r\n    currentUser: null\r\n}\r\n\r\nconst userReducer = (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                currentUser: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setCurrentUser = user => ({type: SET_CURRENT_USER, payload: user});\r\n\r\nexport default userReducer;","import React from \"react\";\r\nimport styles from \"./FormControls.module.sass\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst Element = Element => ({input, meta: {touched, error}, ...props}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <Element {...input} {...props} />\r\n            {hasError && <span> {error} </span>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const Textarea = Element(\"textarea\");\r\nexport const Input = Element(\"input\");\r\n\r\n\r\nexport const createField = (placeholder, type, name, component, validator, className, props = {}, text = '') => (\r\n    <div>\r\n        <label>\r\n            <Field placeholder={placeholder} type={type} name={name} component={component}\r\n                   validate={validator}\r\n                   className={className}\r\n                   {...props}/>\r\n        </label>{text}\r\n    </div>\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appWrapper\":\"App_appWrapper__rJiKN\",\"appWrapperContent\":\"App_appWrapperContent__3b6Ja\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1fywh\",\"logo\":\"Header_logo__3DQ71\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__1wk1s\",\"error\":\"FormControls_error__1lzDE\"};"],"sourceRoot":""}