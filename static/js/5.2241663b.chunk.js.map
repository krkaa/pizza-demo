{"version":3,"sources":["Components/Menu/PreviewItem/PreviewItem.module.sass","Components/Menu/Collection/CollectionPreview.module.sass","Components/Menu/Collection/CollectionPreview.js","Components/Menu/PreviewItem/PreviewItem.js","Components/Menu/MenuHead.jsx","Components/Menu/MenuContent.jsx"],"names":["module","exports","connect","addItem","item","name","price","imageUrl","className","s","collectionItem","image","style","backgroundImage","collectionFooter","onClick","PreviewItem","title","items","previewItem","toUpperCase","preview","filter","idx","map","CollectionPreview","key","id","MenuHead","email","currentUser","state","menuData","menu","quantityItems","cart","useContext","AuthContext","useState","setEmail","useEffect","routeName"],"mappings":"mFACAA,EAAOC,QAAU,CAAC,YAAc,iCAAiC,MAAQ,2BAA2B,QAAU,+B,oBCA9GD,EAAOC,QAAU,CAAC,eAAiB,0CAA0C,MAAQ,iCAAiC,iBAAmB,4CAA4C,KAAO,gCAAgC,MAAQ,mC,iIC8BrNC,cAAQ,KAAM,CAACC,aAAfD,EA1BQ,SAAC,GAAsB,IAApBE,EAAmB,EAAnBA,KAAMD,EAAa,EAAbA,QACpBE,EAA0BD,EAA1BC,KAAMC,EAAoBF,EAApBE,MAAOC,EAAaH,EAAbG,SAOrB,OACI,yBAAKC,UAAWC,IAAEC,gBACd,yBACIF,UAAWC,IAAEE,MACbC,MAAO,CACHC,gBAAgB,OAAD,OAASN,EAAT,QAGvB,yBAAKC,UAAWC,IAAEK,kBACd,0BAAMN,UAAWH,GAAOA,GACxB,0BAAMG,UAAWF,GAAQA,EAAzB,MAEJ,4BAAQS,QAjBK,WAEjBZ,EAAQC,EADA,KAgBJ,mBCGGY,EAxBK,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAE1B,OAAO,yBAAKV,UAAWC,IAAEU,aACrB,wBAAIX,UAAWC,IAAEQ,OAAQA,EAAMG,eAC/B,yBAAKZ,UAAWC,IAAEY,SAEVH,EACKI,QAAO,SAAClB,EAAMmB,GAAP,OAAeA,EAAM,KAC5BC,KAAI,SAACpB,GAAD,OACD,kBAACqB,EAAD,CACIC,IAAKtB,EAAKuB,GACVtB,KAAMD,EAAKC,KACXE,SAAUH,EAAKG,SACfD,MAAOF,EAAKE,MACZF,KAAMA,UCCnBwB,EAjBE,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,YAEtB,OAAO,oCACH,yBAAKtB,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,SAEPsB,EACM,2BAAG,8IAA2BD,KAC9B,2BAAG,+GAAqBA,EAArB,YC6BlB3B,uBALO,SAAA6B,GAAK,MAAK,CAC5BC,SAAUD,EAAME,KAAKD,SACrBE,cAAeH,EAAMI,KAAKD,iBAGU,GAAzBhC,EAlCK,SAAC,GAA+B,IAA9B8B,EAA6B,EAA7BA,SAAUE,EAAmB,EAAnBA,cAErBJ,EAAeM,qBAAWC,KAA1BP,YAFwC,EAIvBQ,mBAAS,kCAJc,mBAI1CT,EAJ0C,KAInCU,EAJmC,KAc/C,OARAC,qBAAU,WAEFD,EADe,MAAfT,EACSA,EAAYD,MAEZ,oCAEd,CAACC,IAEG,oCACH,kBAAC,EAAD,CAAUD,MAAOA,EAAOC,YAAaA,EAAaI,cAAeA,IAE7DF,EAASR,KAAI,SAAApB,GAAI,OACb,kBAAC,EAAD,CACIsB,IAAKtB,EAAKuB,GACVV,MAAOb,EAAKa,MACZwB,UAAWrC,EAAKqC,UAChBvB,MAAOd,EAAKc","file":"static/js/5.2241663b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"previewItem\":\"PreviewItem_previewItem__3ZK46\",\"title\":\"PreviewItem_title__dxNtM\",\"preview\":\"PreviewItem_preview__1hRZN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"collectionItem\":\"CollectionPreview_collectionItem__3Ma_P\",\"image\":\"CollectionPreview_image__3qJdR\",\"collectionFooter\":\"CollectionPreview_collectionFooter__2E1tJ\",\"name\":\"CollectionPreview_name__cyGT2\",\"price\":\"CollectionPreview_price__3MUx3\"};","import React from 'react'\r\nimport s from './CollectionPreview.module.sass'\r\nimport {addItem} from '../../../redux/cart-reducer'\r\nimport { connect } from 'react-redux'\r\n\r\nconst CollectionItem = ({ item, addItem}) => {\r\n    const { name, price, imageUrl } = item\r\n\r\n    const onClickEvent = () => {\r\n        let q = 1\r\n        addItem(item, q)\r\n    }\r\n\r\n    return (\r\n        <div className={s.collectionItem}>\r\n            <div\r\n                className={s.image}\r\n                style={{\r\n                    backgroundImage: `url(${imageUrl})`\r\n                }}\r\n            />\r\n            <div className={s.collectionFooter}>\r\n                <span className={name}>{name}</span>\r\n                <span className={price}>{price}$</span>\r\n            </div>\r\n            <button onClick={onClickEvent}>Add to cart</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default connect(null, {addItem})(CollectionItem)","import React from 'react'\r\nimport s from './PreviewItem.module.sass'\r\nimport CollectionPreview from '../Collection/CollectionPreview'\r\n\r\nconst PreviewItem = ({ title, items }) => {\r\n\r\n    return <div className={s.previewItem}>\r\n        <h1 className={s.title}>{title.toUpperCase()}</h1>\r\n        <div className={s.preview}>\r\n            {\r\n                items\r\n                    .filter((item, idx) => idx < 4)\r\n                    .map((item) => (\r\n                        <CollectionPreview\r\n                            key={item.id}\r\n                            name={item.name}\r\n                            imageUrl={item.imageUrl}\r\n                            price={item.price}\r\n                            item={item}\r\n                        />\r\n                    ))\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\nexport default PreviewItem","import React from 'react';\r\n\r\nconst MenuHead = ({email, currentUser}) => {\r\n\r\n    return <>\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                    {\r\n                        currentUser\r\n                            ? <p><b>{`Вы авторизованы как ${email}`}</b></p>\r\n                            : <p><b>{`Здарвствуйте, ${email}!`}</b></p>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n}\r\n\r\nexport default MenuHead","import React, {useContext, useEffect, useState} from 'react';\r\nimport {AuthContext} from \"../Auth/Auth\";\r\nimport {connect} from \"react-redux\";\r\nimport PreviewItem from \"./PreviewItem/PreviewItem\";\r\nimport MenuHead from \"./MenuHead\";\r\n\r\nconst MenuContent = ({menuData, quantityItems}) => {\r\n\r\n    const {currentUser} = useContext(AuthContext)\r\n\r\n    let [email, setEmail] = useState('Гость')\r\n\r\n    useEffect(() => {\r\n        if (currentUser != null) {\r\n            setEmail(currentUser.email)\r\n        } else {\r\n            setEmail('Гость')\r\n        }\r\n    }, [currentUser])\r\n\r\n    return <>\r\n        <MenuHead email={email} currentUser={currentUser} quantityItems={quantityItems}/>\r\n        {\r\n            menuData.map(item => (\r\n                <PreviewItem\r\n                    key={item.id}\r\n                    title={item.title}\r\n                    routeName={item.routeName}\r\n                    items={item.items}\r\n                />\r\n            ))\r\n        }\r\n    </>\r\n}\r\n\r\nlet mapStateToProps = state => ({\r\n    menuData: state.menu.menuData,\r\n    quantityItems: state.cart.quantityItems\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(MenuContent)"],"sourceRoot":""}