{"version":3,"sources":["Components/Menu/PreviewItem/PreviewItem.module.sass","Components/Menu/Collection/CollectionPreview.module.sass","Components/Menu/Collection/CollectionPreview.js","Components/Menu/PreviewItem/PreviewItem.js","Components/Menu/MenuContent.jsx"],"names":["module","exports","connect","addItem","item","name","price","imageUrl","className","s","collectionItem","image","style","backgroundImage","collectionFooter","onClick","inverted","PreviewItem","title","items","previewItem","toUpperCase","preview","filter","idx","map","CollectionPreview","key","id","state","menuData","menu","currentUser","useContext","AuthContext","useState","setEmail","useEffect","email","console","log","routeName"],"mappings":"mFACAA,EAAOC,QAAU,CAAC,YAAc,iCAAiC,MAAQ,2BAA2B,QAAU,+B,oBCA9GD,EAAOC,QAAU,CAAC,eAAiB,0CAA0C,MAAQ,iCAAiC,iBAAmB,4CAA4C,KAAO,gCAAgC,MAAQ,mC,0ICwBrNC,cAAQ,KAAM,CAACC,aAAfD,EApBQ,SAAC,GAAuB,IAArBE,EAAoB,EAApBA,KAAMD,EAAc,EAAdA,QACpBE,EAA0BD,EAA1BC,KAAMC,EAAoBF,EAApBE,MAAOC,EAAaH,EAAbG,SACrB,OACI,yBAAKC,UAAWC,IAAEC,gBACd,yBACIF,UAAWC,IAAEE,MACbC,MAAO,CACHC,gBAAgB,OAAD,OAASN,EAAT,QAGvB,yBAAKC,UAAWC,IAAEK,kBACd,0BAAMN,UAAWH,GAAOA,GACxB,0BAAMG,UAAWF,GAAQA,EAAzB,MAEJ,4BAAQS,QAAS,kBAAMZ,EAAQC,IAAOY,UAAQ,GAA9C,mBCSGC,EAxBK,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAE1B,OAAO,yBAAKX,UAAWC,IAAEW,aACrB,wBAAIZ,UAAWC,IAAES,OAAQA,EAAMG,eAC/B,yBAAKb,UAAWC,IAAEa,SAEVH,EACKI,QAAO,SAACnB,EAAMoB,GAAP,OAAeA,EAAM,KAC5BC,KAAI,SAACrB,GAAD,OACD,kBAACsB,EAAD,CACIC,IAAKvB,EAAKwB,GACVvB,KAAMD,EAAKC,KACXE,SAAUH,EAAKG,SACfD,MAAOF,EAAKE,MACZF,KAAMA,UCuBnBF,uBAJO,SAAA2B,GAAK,MAAK,CAC5BC,SAAUD,EAAME,KAAKD,YAGe,GAAzB5B,EAnCK,SAAC,GAAgB,IAAf4B,EAAc,EAAdA,SAEXE,EAAeC,qBAAWC,KAA1BF,YAFyB,EAIRG,mBAAS,uGAJD,mBAIpBC,GAJoB,WAiBhC,OAXAC,qBAAU,WAEFD,EADc,MAAfJ,EACUA,EAAYM,MAGZ,yGAEd,CAACN,IAEJO,QAAQC,IAAIV,EAASL,KAAI,SAAArB,GAAI,OAAIA,MAE1B,oCAEK0B,EAASL,KAAI,SAAArB,GAAI,OACb,kBAAC,EAAD,CACIuB,IAAKvB,EAAKwB,GACVV,MAAOd,EAAKc,MACZuB,UAAWrC,EAAKqC,UAChBtB,MAAOf,EAAKe","file":"static/js/4.91c4ad3d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"previewItem\":\"PreviewItem_previewItem__3ZK46\",\"title\":\"PreviewItem_title__dxNtM\",\"preview\":\"PreviewItem_preview__1hRZN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"collectionItem\":\"CollectionPreview_collectionItem__3Ma_P\",\"image\":\"CollectionPreview_image__3qJdR\",\"collectionFooter\":\"CollectionPreview_collectionFooter__2E1tJ\",\"name\":\"CollectionPreview_name__cyGT2\",\"price\":\"CollectionPreview_price__3MUx3\"};","import React from 'react'\r\nimport s from './CollectionPreview.module.sass'\r\nimport { addItem } from '../../../redux/cart-reducer'\r\nimport { connect } from 'react-redux'\r\n\r\nconst CollectionItem = ({ item, addItem }) => {\r\n    const { name, price, imageUrl } = item\r\n    return (\r\n        <div className={s.collectionItem}>\r\n            <div\r\n                className={s.image}\r\n                style={{\r\n                    backgroundImage: `url(${imageUrl})`\r\n                }}\r\n            />\r\n            <div className={s.collectionFooter}>\r\n                <span className={name}>{name}</span>\r\n                <span className={price}>{price}$</span>\r\n            </div>\r\n            <button onClick={() => addItem(item)} inverted>Add to cart</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default connect(null, {addItem})(CollectionItem)","import React from 'react'\r\nimport s from './PreviewItem.module.sass'\r\nimport CollectionPreview from '../Collection/CollectionPreview'\r\n\r\nconst PreviewItem = ({ title, items }) => {\r\n\r\n    return <div className={s.previewItem}>\r\n        <h1 className={s.title}>{title.toUpperCase()}</h1>\r\n        <div className={s.preview}>\r\n            {\r\n                items\r\n                    .filter((item, idx) => idx < 4)\r\n                    .map((item) => (\r\n                        <CollectionPreview\r\n                            key={item.id}\r\n                            name={item.name}\r\n                            imageUrl={item.imageUrl}\r\n                            price={item.price}\r\n                            item={item}\r\n                        />\r\n                    ))\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\nexport default PreviewItem","import React, {useContext, useEffect, useState} from 'react';\r\nimport {AuthContext} from \"../Auth/Auth\";\r\nimport {connect} from \"react-redux\";\r\nimport {requestMenu} from \"../../redux/menu-reducer\";\r\nimport PreviewItem from \"./PreviewItem/PreviewItem\";\r\n\r\nconst MenuContent = ({menuData}) => {\r\n\r\n    const {currentUser} = useContext(AuthContext)\r\n\r\n    let [email, setEmail] = useState('Вы не авторизованы!')\r\n\r\n    useEffect(() => {\r\n        if(currentUser != null) {\r\n            setEmail(currentUser.email)\r\n        }\r\n        else {\r\n            setEmail('Вы не авторизованы!')\r\n        }\r\n    }, [currentUser])\r\n\r\n    console.log(menuData.map(item => item))\r\n\r\n    return <>\r\n            {\r\n                menuData.map(item => (\r\n                    <PreviewItem\r\n                        key={item.id}\r\n                        title={item.title}\r\n                        routeName={item.routeName}\r\n                        items={item.items}\r\n                    />\r\n                ))\r\n            }\r\n        </>\r\n}\r\n\r\nlet mapStateToProps = state => ({\r\n    menuData: state.menu.menuData\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(MenuContent)"],"sourceRoot":""}